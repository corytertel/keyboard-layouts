// Russian keyboard layout that phonetically corresponds to the 
// US beakl emacs layout.
// 2022/11/08 Cory Tertel

default partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "basic" {

    name[Group1]= "Russian BEAKL Emacs";

    key <TLDE> { [       Cyrillic_io,       Cyrillic_IO  ] };

    key <AE01> { [                 3,            exclam  ] };
    key <AE02> { [                 2,                at  ] };
    key <AE03> { [                 1,        numerosign  ] };
    key <AE04> { [                 4,            dollar  ] };
    key <AE05> { [                 5,           percent  ] };
    key <AE06> { [                 6,       asciicircum  ] };
    key <AE07> { [                 7,         ampersand  ] };
    key <AE08> { [                 0,   asterisk, U20BD  ] };
    key <AE09> { [                 9,         parenleft  ] };
    key <AE10> { [                 8,        parenright  ] };
    key <AE11> { [        dead_acute,          question  ] };
    key <AE12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN  ] };

    key <AD01> { [   Cyrillic_shorti,   Cyrillic_SHORTI  ] };
    key <AD02> { [     Cyrillic_yeru,     Cyrillic_YERU  ] };
    key <AD03> { [        Cyrillic_o,        Cyrillic_O  ] };
    key <AD04> { [        Cyrillic_u,        Cyrillic_U  ] };
    key <AD05> { [       Cyrillic_ka,       Cyrillic_KA  ] };
    key <AD06> { [      Cyrillic_sha,      Cyrillic_SHA  ] };
    key <AD07> { [       Cyrillic_be,       Cyrillic_BE  ] };
    key <AD08> { [       Cyrillic_pe,       Cyrillic_PE  ] };
    key <AD09> { [       Cyrillic_ef,       Cyrillic_EF  ] };
    key <AD10> { [       Cyrillic_ze,       Cyrillic_ZE  ] };
    key <AD11> { [       Cyrillic_yu,       Cyrillic_YU  ] };
    key <AD12> { [    Cyrillic_shcha,    Cyrillic_SHCHA  ] };

    key <AC01> { [      Cyrillic_che,      Cyrillic_CHE  ] };
    key <AC02> { [        Cyrillic_i,        Cyrillic_I  ] };
    key <AC03> { [       Cyrillic_ie,       Cyrillic_IE  ] };
    key <AC04> { [        Cyrillic_a,        Cyrillic_A  ] };
    key <AC05> { [            period,    guillemotright  ] };
    key <AC06> { [       Cyrillic_de,       Cyrillic_DE  ] };
    key <AC07> { [       Cyrillic_te,       Cyrillic_TE  ] };
    key <AC08> { [       Cyrillic_en,       Cyrillic_EN  ] };
    key <AC09> { [       Cyrillic_es,       Cyrillic_ES  ] };
    key <AC10> { [       Cyrillic_er,       Cyrillic_ER  ] };
    key <AC11> { [             minus,            emdash  ] };

    key <AB01> { [       Cyrillic_ya,       Cyrillic_YA  ] };
    key <AB02> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN  ] };
    key <AB03> { [      Cyrillic_zhe,      Cyrillic_ZHE  ] };
    key <AB04> { [             comma,     guillemotleft  ] };
    key <AB05> { [       Cyrillic_ha,       Cyrillic_HA  ] };
    key <AB06> { [      Cyrillic_ghe,      Cyrillic_GHE  ] };
    key <AB07> { [       Cyrillic_el,       Cyrillic_EL  ] };
    key <AB08> { [       Cyrillic_em,       Cyrillic_EM  ] };
    key <AB09> { [      Cyrillic_tse,      Cyrillic_TSE  ] };
    key <AB10> { [       Cyrillic_ve,       Cyrillic_VE  ] };

    key.type[Group1]="KEYPAD" ;
    key <KPDL> { [ KP_Delete, KP_Separator ] }; // <delete> <separator>

    key <BKSL> { [        Cyrillic_e,        Cyrillic_E  ] };
    key <BKSP> { [         BackSpace,         BackSpace  ] };

    key <LFSH> {
      type[Group1]="TWO_LEVEL",
      symbols[Group1] = [ Shift_L, Caps_Lock ]
    };
    key <RTSH> {
      type[Group1]="TWO_LEVEL",
      symbols[Group1] = [ Shift_R, Caps_Lock ]
    };

    replace key <CAPS> { [ Control_L, Control_L ] };
    modifier_map  Control { <CAPS>, <LCTL> };

};
