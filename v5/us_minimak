// 4 Key Minimak

default partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "English";

    key <TLDE> { [       grave,	asciitilde, dead_grave, dead_tilde	] };

    key <AE01> { [	    1,	exclam	    	]	};
    key <AE02> { [	    2,	at		]	};
    key <AE03> { [	    3,	numbersign	]	};
    key <AE04> { [	    4,	dollar		]	};
    key <AE05> { [	    5,	percent		]	};
    key <AE06> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
    key <AE07> { [	    7,	ampersand	]	};
    key <AE08> { [	    8,	asterisk	]	};
    key <AE09> { [	    9,	bracketleft,  dead_grave]	};
    key <AE10> { [	    0,	bracketright	]	};
    key <AE11> { [	minus,	underscore	]	};
    key <AE12> { [	equal,	plus		]	};

    key <AD01> { [	    q,	Q		]	};
    key <AD02> { [	    w,	W		]	};
    key <AD03> { [	    d,	D, Delete, Delete ]	};
    key <AD04> { [	    r,	R		]	};
    key <AD05> { [	    k,	K		]	};
    key <AD06> { [	    y,	Y, End, End	]	};
    key <AD07> { [	    u,	U		]	};
    key <AD08> { [	    i,	I, Up, Up	]	};
    key <AD09> { [	    o,	O		]	};
    key <AD10> { [	    p,	P		]	};
    key <AD11> { [  parenleft,	braceleft	]	};
    key <AD12> { [ parenright,  braceright,  dead_tilde] };

    key <AC01> { [	    a,	A 		]	};
    key <AC02> { [	    s,	S		]	};
    key <AC03> { [	    t,	T		]	};
    key <AC04> { [	    f,	F		]	};
    key <AC05> { [	    g,	G, Escape, Escape ]	};
    key <AC06> { [	    h,	H		]	};
    key <AC07> { [	    j,	J, Left, Left	]	};
    key <AC08> { [	    e,	E, Down, Down	]	};
    key <AC09> { [	    l,	L, Right, Right	]	};
    key <AC10> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
    key <AC11> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };

    key <AB01> { [	    z,	Z		]	};
    key <AB02> { [	    x,	X		]	};
    key <AB03> { [	    c,	C		]	};
    key <AB04> { [	    v,	V		]	};
    key <AB05> { [	    b,	B, Home, Home	]	};
    key <AB06> { [	    n,	N		]	};
    key <AB07> { [	    m,	M		]	};
    key <AB08> { [	comma,	less,   dead_cedilla, dead_caron	] };
    key <AB09> { [      period,	greater, dead_abovedot, periodcentered	] };
    key <AB10> { [	slash,	question	]	};
    
    // Trigger caps lock when both shifts are pressed
    key <LFSH> {
      type[Group1]="TWO_LEVEL",
      symbols[Group1] = [ Shift_L, Caps_Lock ]
    };
    key <RTSH> {
      type[Group1]="TWO_LEVEL",
      symbols[Group1] = [ Shift_R, Caps_Lock ]
    };
    
    // Eliminate CapsLock, making it another Ctrl.
    replace key <CAPS> { [ Control_L, Control_L ] };
    modifier_map  Control { <CAPS>, <LCTL> };

    // Make Control_R into AltGr    
    key <RCTL> { [ ISO_Level3_Shift ] };
};
